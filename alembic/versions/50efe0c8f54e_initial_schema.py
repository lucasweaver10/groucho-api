"""initial schema

Revision ID: 50efe0c8f54e
Revises: 
Create Date: 2025-02-12 17:37:00.468633

"""
from typing import Sequence, Union
from enum import Enum

import sqlmodel
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql
from sqlalchemy import text

class TypeEnum(str, Enum):
    user = "user"
    system = "system"


# revision identifiers, used by Alembic.
revision: str = '50efe0c8f54e'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('ai_providers',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('api_endpoint', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('pydantic_ai_wrapper', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('is_openai_compatible', sa.Boolean(), nullable=False),
    sa.Column('custom_fields', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('content_briefs',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('content_id', sa.Integer(), nullable=False),
    sa.Column('content_brief_template_id', sa.Integer(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('title', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('description', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('primary_keyword', sqlmodel.sql.sqltypes.AutoString(length=200), nullable=True),
    sa.Column('secondary_keywords', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('author_instructions', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('writing_sample', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('negative_words', sqlmodel.sql.sqltypes.AutoString(length=200), nullable=True),
    sa.Column('suggested_word_count', sa.Integer(), nullable=True),
    sa.Column('product_info', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('call_to_action', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('custom_data', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_content_briefs_user_id'), 'content_briefs', ['user_id'], unique=False)
    op.create_table('content_outlines',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('content_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('title', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('description', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('custom_data', sa.JSON(), nullable=True),
    sa.Column('content_brief_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['content_brief_id'], ['content_briefs.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_content_outlines_user_id'), 'content_outlines', ['user_id'], unique=False)
    op.create_table('contents',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('content_series_id', sa.Integer(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('title', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('type', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('description', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('text', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('custom_data', sa.JSON(), nullable=True),
    sa.Column('content_brief_id', sa.Integer(), nullable=True),
    sa.Column('content_outline_id', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['content_brief_id'], ['content_briefs.id'], ),
    sa.ForeignKeyConstraint(['content_outline_id'], ['content_outlines.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_contents_user_id'), 'contents', ['user_id'], unique=False)
    op.create_table('prompts',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('title', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('description', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('type', sa.Enum(TypeEnum, name='typeenum', create_type=False), nullable=False),
    sa.Column('prompt', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('email', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('stripe_customer_id', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('stripe_subscription_id', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('stripe_product_id', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('stripe_price_id', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('subscription_status', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('subscription_end_date', sa.DateTime(), nullable=True),
    sa.Column('lifetime_access', sa.Boolean(), nullable=False),
    sa.Column('total_paid', sa.Float(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('stripe_customer_id'),
    sa.UniqueConstraint('stripe_subscription_id')
    )
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)
    op.create_table('ai_models',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('provider_id', sa.Integer(), nullable=False),
    sa.Column('custom_fields', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['provider_id'], ['ai_providers.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('content_brief_templates',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('title', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('description', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('author_instructions', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('writing_sample', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('negative_words', sqlmodel.sql.sqltypes.AutoString(length=200), nullable=True),
    sa.Column('product_info', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('call_to_action', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('custom_data', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_content_brief_templates_user_id'), 'content_brief_templates', ['user_id'], unique=False)
    op.create_table('content_outline_sections',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('content_outline_id', sa.Integer(), nullable=False),
    sa.Column('text', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('custom_data', sa.JSON(), nullable=True),
    sa.Column('order', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['content_outline_id'], ['content_outlines.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('content_series',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('title', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('description', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('custom_data', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_content_series_user_id'), 'content_series', ['user_id'], unique=False)
    op.create_table('uploads',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('file_path', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('original_filename', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('file_size', sa.Integer(), nullable=False),
    sa.Column('mime_type', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('description', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('upload_date', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('content_sections',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('content_id', sa.Integer(), nullable=False),
    sa.Column('content_outline_section_id', sa.Integer(), nullable=False),
    sa.Column('order', sa.Integer(), nullable=False),
    sa.Column('text', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('custom_data', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['content_id'], ['contents.id'], ),
    sa.ForeignKeyConstraint(['content_outline_section_id'], ['content_outline_sections.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_foreign_key('fk_content_briefs_content_id', 'content_briefs', 'contents', ['content_id'], ['id'])
    op.create_foreign_key('fk_content_briefs_content_brief_template_id', 'content_briefs', 'content_brief_templates', ['content_brief_template_id'], ['id'])
    op.create_foreign_key('fk_content_briefs_user_id', 'content_briefs', 'users', ['user_id'], ['id'])
    op.create_foreign_key('fk_content_outlines_content_id', 'content_outlines', 'contents', ['content_id'], ['id'])
    op.create_foreign_key('fk_content_outlines_user_id', 'content_outlines', 'users', ['user_id'], ['id'])
    op.create_foreign_key('fk_contents_content_series_id', 'contents', 'content_series', ['content_series_id'], ['id'])
    op.create_foreign_key('fk_contents_user_id', 'contents', 'users', ['user_id'], ['id'])
    op.create_foreign_key('fk_content_brief_templates_user_id', 'content_brief_templates', 'users', ['user_id'], ['id'])
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    # Drop the enum type after tables are dropped
    connection = op.get_bind()
    
    op.drop_table('content_sections')
    op.drop_table('uploads')
    op.drop_index(op.f('ix_content_series_user_id'), table_name='content_series')
    op.drop_table('content_series')
    op.drop_table('content_outline_sections')
    op.drop_index(op.f('ix_content_brief_templates_user_id'), table_name='content_brief_templates')
    op.drop_table('content_brief_templates')
    op.drop_table('ai_models')
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.drop_table('users')
    op.drop_table('prompts')
    op.drop_index(op.f('ix_contents_user_id'), table_name='contents')
    op.drop_table('contents')
    op.drop_index(op.f('ix_content_outlines_user_id'), table_name='content_outlines')
    op.drop_table('content_outlines')
    op.drop_index(op.f('ix_content_briefs_user_id'), table_name='content_briefs')
    op.drop_table('content_briefs')
    op.drop_table('ai_providers')
    
    # Drop the enum type if it exists
    connection.execute(text("DROP TYPE IF EXISTS typeenum;"))
    # ### end Alembic commands ###
